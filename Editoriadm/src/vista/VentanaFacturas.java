/*
 * VentanaFacturas.java
 *
 * Created on 18 de marzo de 2007, 15:31
 */

package vista;

import controlador.Cliente;
import controlador.Factura;
import controlador.FacturaConRecibo;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  PC
 */
public class VentanaFacturas extends javax.swing.JFrame {
    
    private VentanaClientes padre;
    private Cliente cli;
    /** Creates new form VentanaFacturas */
    public VentanaFacturas(VentanaClientes vc, Cliente cli) {
        this.cli = cli;
        this.padre= vc;
        initTabla();
        initComponents();
        
        this.setTitle("Facturas de " + cli.getNombre());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jTable1.setModel(getModel());
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Registrar nueva");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ver Detalle");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int fila = jTable1.getSelectedRow();
        if (fila == -1){
            JOptionPane.showMessageDialog(this, "Seleccione una factura primero.", "No hay ninguna factura seleccionada", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Factura factura = new Factura((String)dtm.getValueAt(fila, 0), (String)dtm.getValueAt(fila, 1)) ;
        VerDetalleFactura vdf = new VerDetalleFactura(factura);
        vdf.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        NuevaFactura nf = new NuevaFactura(this, this.cli);
        nf.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int fila = jTable1.getSelectedRow();
        if (fila == -1 ){
            JOptionPane.showMessageDialog(this, "Seleccione una factura primero.", "No hay ninguna factura seleccionada", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object[] options = {"Borrar",
                    "Cancelar"};
        int n = JOptionPane.showOptionDialog(this, "Se perderan todos los datos de esta factura. "
            + "Realmente desea borrarla?", "Precaución", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
        if(n == 0){
            Factura factura = new Factura((String)dtm.getValueAt(fila, 0), (String)dtm.getValueAt(fila, 1)) ;
            if(factura.isPagado()){ //se han pagado recibos - debe regenerarse la deuda
                factura.borrar();
                borrarFila();
            }
            else{ //es una factura con recibo, se borra y debe borrarse la deuda generada
                FacturaConRecibo f = new FacturaConRecibo(factura.getId());
                if(f.tieneRecibosAsociados()){
                    JOptionPane.showMessageDialog(this, "No se puede borrar la factura " + factura.getTipo() + " " + factura.getNumero() + ", ya que tiene recibos asociados.", "Error", JOptionPane.ERROR_MESSAGE );
                return;
                }
                f.borrar();
                borrarFila();
            } 
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
 
    public DefaultTableModel getModel(){
        return this.dtm;
    }
    public void initTabla(){
        dtm = new DefaultTableModel();
        LinkedList listaFacturas = Factura.getFacturas(cli.getId());
        dtm.addColumn("Tipo");
        dtm.addColumn("Numero");
        dtm.addColumn("Fecha");
        dtm.addColumn("Total");
        dtm.addColumn("Comision");
        dtm.addColumn("A cobrar");
        dtm.addColumn("Pagada");
        
        for(int i = 0; i < listaFacturas.size(); i++){
            Factura factura = (Factura) listaFacturas.get(i);
            dtm.addRow(getFila(factura));
        }
        listaFacturas.clear();
    }
    private Object[] getFila(Factura factura){
        Object[] datos = new Object[7];
        datos[0] = factura.getTipo();
        datos[1] = factura.getNumero();
        datos[2] = factura.getFecha();
        datos[3] = factura.getTotal();
        datos[4] = factura.calcularComision(factura.getComision());
        datos[5] = (Float)datos[3] - (Float)datos[4];
        datos[6] = factura.isPagado();
        
        return datos;
    }
    public void insertarFila(Factura factura){
        this.dtm.addRow(getFila(factura));
    }
    public boolean borrarFila(){
        if(jTable1.getSelectedRow() != -1){
            this.dtm.removeRow(jTable1.getSelectedRow());
            return true;
        }
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel dtm;
}
